using System;
using Npgsql;

public class ChamadoDAO
{
    // String de conexão com o PostgreSQL — ajuste com seus dados reais
    private string connectionString = "Host=localhost;Username=postgres;Password=senha;Database=suporte";

    /// <summary>
    /// Insere um novo chamado no banco de dados.
    /// </summary>
    public void CriarChamado(DateTime dataAbertura, string status, int idFuncionario, string categoria, string titulo, string descricao)
    {
        try
        {
            using var conn = new NpgsqlConnection(connectionString);
            conn.Open();

            var sql = @"INSERT INTO chamado (data_abertura, status, id_funcionario, categoria, titulo, descricao)
                        VALUES (@data, @status, @idFunc, @cat, @titulo, @desc)";

            using var cmd = new NpgsqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("data", dataAbertura);
            cmd.Parameters.AddWithValue("status", status);
            cmd.Parameters.AddWithValue("idFunc", idFuncionario);
            cmd.Parameters.AddWithValue("cat", categoria);
            cmd.Parameters.AddWithValue("titulo", titulo);
            cmd.Parameters.AddWithValue("desc", descricao);

            cmd.ExecuteNonQuery();
            Console.WriteLine("Chamado criado com sucesso.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao criar chamado: {ex.Message}");
        }
    }

    /// <summary>
    /// Consulta e exibe um chamado pelo ID.
    /// </summary>
    public void LerChamadoPorId(int idChamado)
    {
        try
        {
            using var conn = new NpgsqlConnection(connectionString);
            conn.Open();

            var sql = "SELECT * FROM chamado WHERE id_chamado = @id";
            using var cmd = new NpgsqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("id", idChamado);

            using var reader = cmd.ExecuteReader();
            if (reader.Read())
            {
                Console.WriteLine("=== Dados do Chamado ===");
                Console.WriteLine($"ID: {reader["id_chamado"]}");
                Console.WriteLine($"Título: {reader["titulo"]}");
                Console.WriteLine($"Descrição: {reader["descricao"]}");
                Console.WriteLine($"Status: {reader["status"]}");
                Console.WriteLine($"Data Abertura: {reader["data_abertura"]}");
                Console.WriteLine($"Categoria: {reader["categoria"]}");
                Console.WriteLine($"ID Funcionário: {reader["id_funcionario"]}");
            }
            else
            {
                Console.WriteLine("Chamado não encontrado.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao buscar chamado: {ex.Message}");
        }
    }

    /// <summary>
    /// Atualiza o status de um chamado existente.
    /// </summary>
    public void AtualizarStatusChamado(int idChamado, string novoStatus)
    {
        try
        {
            using var conn = new NpgsqlConnection(connectionString);
            conn.Open();

            var sql = "UPDATE chamado SET status = @status WHERE id_chamado = @id";
            using var cmd = new NpgsqlCommand(sql, conn);
            cmd.Parameters.AddWithValue("status", novoStatus);
            cmd.Parameters.AddWithValue("id", idChamado);

            int rows = cmd.ExecuteNonQuery();
            if (rows > 0)
                Console.WriteLine("Status do chamado atualizado com sucesso.");
            else
                Console.WriteLine("Chamado não encontrado.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao atualizar status: {ex.Message}");
        }
    }
}
